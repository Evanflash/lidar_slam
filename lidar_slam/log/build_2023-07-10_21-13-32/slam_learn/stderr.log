[01m[K/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/src/front_end.cpp:[m[K In member function â€˜[01m[Kvoid lidarslam::FrontEnd::odometry()[m[Kâ€™:
[01m[K/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/src/front_end.cpp:452:17:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[KsurfFlatNum[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable-Wunused-variable]8;;[m[K]
  452 |             int [01;35m[KsurfFlatNum[m[K = surfFlat -> size();
      |                 [01;35m[K^~~~~~~~~~~[m[K
In file included from [01m[K/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/src/front_end.cpp:2[m[K:
/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/include/slam_learn/lidar_factor.hpp: In instantiation of â€˜[01m[Kbool lidarslam::GroundPlaneFactor::operator()(const T*, const T*, T*) const [with T = double][m[Kâ€™:
[01m[K/usr/local/include/ceres/internal/variadic_evaluate.h:55:17:[m[K   required from â€˜[01m[Kbool ceres::internal::VariadicEvaluateImpl(const Functor&, const T* const*, T*, std::false_type, std::integer_sequence<int, Indices ...>) [with Functor = lidarslam::GroundPlaneFactor; T = double; int ...Indices = {0, 1}; std::false_type = std::integral_constant<bool, false>][m[Kâ€™
[01m[K/usr/local/include/ceres/internal/variadic_evaluate.h:77:30:[m[K   required from â€˜[01m[Kbool ceres::internal::VariadicEvaluateImpl(const Functor&, const T* const*, T*, const void*) [with ParameterDims = ceres::internal::ParameterDims<false, 4, 3>; Functor = lidarslam::GroundPlaneFactor; T = double][m[Kâ€™
[01m[K/usr/local/include/ceres/internal/variadic_evaluate.h:106:45:[m[K   required from â€˜[01m[Kbool ceres::internal::VariadicEvaluate(const Functor&, const T* const*, T*) [with ParameterDims = ceres::internal::ParameterDims<false, 4, 3>; Functor = lidarslam::GroundPlaneFactor; T = double][m[Kâ€™
[01m[K/usr/local/include/ceres/autodiff_cost_function.h:208:55:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, Ns>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = lidarslam::GroundPlaneFactor; int kNumResiduals = 1; int ...Ns = {4, 3}][m[Kâ€™
[01m[K/usr/local/include/ceres/autodiff_cost_function.h:201:8:[m[K   required from here
[01m[K/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/include/slam_learn/lidar_factor.hpp:63:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[K_d[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable-Wunused-variable]8;;[m[K]
   63 |         T [01;35m[K_d[m[K = T(d);
      |           [01;35m[K^~[m[K
/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/include/slam_learn/lidar_factor.hpp: In instantiation of â€˜[01m[Kbool lidarslam::GroundPlaneFactor::operator()(const T*, const T*, T*) const [with T = ceres::Jet<double, 7>][m[Kâ€™:
[01m[K/usr/local/include/ceres/internal/variadic_evaluate.h:55:17:[m[K   required from â€˜[01m[Kbool ceres::internal::VariadicEvaluateImpl(const Functor&, const T* const*, T*, std::false_type, std::integer_sequence<int, Indices ...>) [with Functor = lidarslam::GroundPlaneFactor; T = ceres::Jet<double, 7>; int ...Indices = {0, 1}; std::false_type = std::integral_constant<bool, false>][m[Kâ€™
[01m[K/usr/local/include/ceres/internal/variadic_evaluate.h:77:30:[m[K   required from â€˜[01m[Kbool ceres::internal::VariadicEvaluateImpl(const Functor&, const T* const*, T*, const void*) [with ParameterDims = ceres::internal::ParameterDims<false, 4, 3>; Functor = lidarslam::GroundPlaneFactor; T = ceres::Jet<double, 7>][m[Kâ€™
[01m[K/usr/local/include/ceres/internal/variadic_evaluate.h:106:45:[m[K   required from â€˜[01m[Kbool ceres::internal::VariadicEvaluate(const Functor&, const T* const*, T*) [with ParameterDims = ceres::internal::ParameterDims<false, 4, 3>; Functor = lidarslam::GroundPlaneFactor; T = ceres::Jet<double, 7>][m[Kâ€™
[01m[K/usr/local/include/ceres/internal/autodiff.h:349:39:[m[K   required from â€˜[01m[Kbool ceres::internal::AutoDifferentiate(const Functor&, const T* const*, int, T*, T**) [with int kNumResiduals = 1; ParameterDims = ceres::internal::ParameterDims<false, 4, 3>; Functor = lidarslam::GroundPlaneFactor; T = double][m[Kâ€™
[01m[K/usr/local/include/ceres/autodiff_cost_function.h:211:69:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, Ns>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = lidarslam::GroundPlaneFactor; int kNumResiduals = 1; int ...Ns = {4, 3}][m[Kâ€™
[01m[K/usr/local/include/ceres/autodiff_cost_function.h:201:8:[m[K   required from here
[01m[K/home/evan/code/lidar_slam/lidar_slam/src/slam_learn/include/slam_learn/lidar_factor.hpp:63:11:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[K_d[m[Kâ€™ set but not used [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-but-set-variable-Wunused-but-set-variable]8;;[m[K]
